@using HSMVC.Helpers.Button
@model HSMVC.Features.Conference.Commands.ConferenceBulkEditCommand

@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @RenderValidationErrors()

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Hash Tag</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Commands.Count(); i++)
            {
                <tr>
                    @Html.HiddenFor(x => x.Commands[i].Id)
                    <td>@Html.TextBoxFor(x => x.Commands[i].Name, new { @class = "form-control" })</td>
                    <td>@Html.DisplayFor(x => x.Commands[i].HashTag, new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(x => x.Commands[i].StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(x => x.Commands[i].EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(x => x.Commands[i].Cost, new { @class = "form-control", @type = "number" })</td>
                </tr>
            }
        </tbody>
    </table>

    @Html.SaveButton()
}
@Html.CancelToConferenceIndexButton()

@helper RenderValidationErrors()
{
    var hasValidationErrors = ViewData.ModelState.Values.Any(x => x.Errors.Any());
    if (hasValidationErrors)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary("Please fix the listed errors:")
        </div>
    }
}
